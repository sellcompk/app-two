name: Deploy

on:
  workflow_call:
    inputs:
      container_name:
        required: true
        type: string
      port:
        required: true
        type: string
      docker_network:
        required: true
        type: string
    secrets:
      JWT_KEY:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      GHCR_PAT:
        required: true

jobs:
  Build:
    name: Build and Push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        dotnetSdkVersion: ["8.x"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnetSdkVersion }}

      - name: Restore NuGet packages
        run: dotnet restore src/app-two.sln

      - name: Build and publish .NET apps
        run: |
          dotnet build src/app-two.sln --configuration Release --no-restore
          dotnet publish src/app-two/app-two.csproj --configuration Release --output ./build

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Build Docker images
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} -f docker/Dockerfile .

      - name: Push Docker images to GitHub Packages
        run: |
          docker tag ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}:latest

  Deploy:
    name: Deploy to Oracle Cloud Instance
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Log in to GitHub Container Registry on VM
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ vars.VM_IP }}
          username: ${{ vars.VM_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Login to GHCR on VM (PAT with read:packages)
            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            DOCKER_NET=${{ inputs.docker_network }}
            CONTAINER_NAME=${{ inputs.container_name }}

            # Connect to network and pull latest image
            docker network connect $DOCKER_NET graylog || true
            docker pull ghcr.io/${{ github.repository }}:latest

            # Stop and remove existing container
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true

            # Run new container
            docker run --cpus="0.5" --memory="1g" -d \
              --name $CONTAINER_NAME \
              -e NODE_ENV='production' \
              -e PORT=80 \
              -e JWT_KEY='${{ secrets.JWT_KEY }}' \
              -e JWT_ISSUER='${{ vars.JWT_ISSUER || 'oracle' }}' \
              -e JWT_AUDIENCE='${{ vars.JWT_AUDIENCE || 'api-two' }}' \
              -p ${{ inputs.port }}:80 \
              --restart=unless-stopped \
              --network=$DOCKER_NET \
              ghcr.io/${{ github.repository }}:latest
